apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api
  strategy: {}
  template:
    metadata:
      labels:
        io.kompose.service: api
    spec:
      initContainers:
        - name: wait-for-mssql
          image: busybox
          command: ['sh', '-c', 'until nc -z mssql 1433; do echo Waiting for MSSQL; sleep 2; done;']
        - name: wait-for-rabbitmq
          image: busybox
          command: ['sh', '-c', 'until nc -z rabbitmq 5672; do echo Waiting for RabbitMQ; sleep 2; done;']
      containers:
        - env:
            - name: MSSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-password
                  key: mssql-password
            - name: ConnectionStrings__DefaultConnection
              value: "Server=tcp:mssql,1433;Initial Catalog=RabbitMqDemo;Persist Security Info=False;User ID=sa;Password=$(MSSQL_PASSWORD);Connection Timeout=30;"
            - name: RabbitMQ__Hostname
              valueFrom:
                configMapKeyRef:
                  name: api
                  key: rabbitmq_hostname
            - name: RabbitMQ__Password
              valueFrom:
                secretKeyRef:
                  key: rabbit-password
                  name: rabbit-password
            - name: RabbitMQ__Username
              valueFrom:
                secretKeyRef:
                  key: rabbit-username
                  name: rabbit-username
          image: matthieuf/pubsub-api:1.3
          name: api
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 200m
          volumeMounts:
            - name: secrets-store
              mountPath: "/mnt/secrets-store"
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "kv-mfolabs"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api
data:
  rabbitmq_hostname: "rabbitmq"
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api
spec:
  ingressClassName: azure-application-gateway
  rules:
  - host: "app0.mfolabs.me"
    http:
      paths:
      - path: /api/Product/productlist
        pathType: Prefix
        backend:
          service:
            name: api
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: api
  name: api
spec:
  ports:
    - name: "http"
      port: 80
      targetPort: 80
  selector:
    io.kompose.service: api
  type: ClusterIP