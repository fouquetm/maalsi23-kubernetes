kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: rabbitmq-data1
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: rabbitmq-data0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  template:
    metadata:
      labels:
        io.kompose.service: rabbitmq
    spec:
      containers:
        - env:
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  key: rabbit-password
                  name: rabbit-password
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  key: rabbit-username
                  name: rabbit-username
          image: rabbitmq:3.8.25-management-alpine
          name: lab-rabbitmq
          ports:
            - containerPort: 15672
            - containerPort: 5672
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-claim0
            - mountPath: /var/log/rabbitmq
              name: rabbitmq-claim1
            - name: secrets-store
              mountPath: "/mnt/secrets-store"
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: rabbitmq-claim0
          persistentVolumeClaim:
            claimName: rabbitmq-data0
        - name: rabbitmq-claim1
          persistentVolumeClaim:
            claimName: rabbitmq-data1
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "kv-mfolabs"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rabbitmq
spec:
  ingressClassName: azure-application-gateway
  rules:
  - host: "app0.mfolabs.me"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rabbitmq
            port:
              number: 15672
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  ports:
    - name: "webadmin"
      port: 15672
      targetPort: 15672
    - name: "amqp"
      port: 5672
      targetPort: 5672
  selector:
    io.kompose.service: rabbitmq